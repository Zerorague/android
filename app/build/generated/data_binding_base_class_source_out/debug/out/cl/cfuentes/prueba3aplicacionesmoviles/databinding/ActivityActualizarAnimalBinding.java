// Generated by view binder compiler. Do not edit!
package cl.cfuentes.prueba3aplicacionesmoviles.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import cl.cfuentes.prueba3aplicacionesmoviles.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityActualizarAnimalBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView actualizarAnimalTitulo;

  @NonNull
  public final Button btnActualizarAnimal;

  @NonNull
  public final EditText chipAnimal;

  @NonNull
  public final LinearLayout main;

  private ActivityActualizarAnimalBinding(@NonNull LinearLayout rootView,
      @NonNull TextView actualizarAnimalTitulo, @NonNull Button btnActualizarAnimal,
      @NonNull EditText chipAnimal, @NonNull LinearLayout main) {
    this.rootView = rootView;
    this.actualizarAnimalTitulo = actualizarAnimalTitulo;
    this.btnActualizarAnimal = btnActualizarAnimal;
    this.chipAnimal = chipAnimal;
    this.main = main;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityActualizarAnimalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityActualizarAnimalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_actualizar_animal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityActualizarAnimalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actualizarAnimalTitulo;
      TextView actualizarAnimalTitulo = ViewBindings.findChildViewById(rootView, id);
      if (actualizarAnimalTitulo == null) {
        break missingId;
      }

      id = R.id.btnActualizarAnimal;
      Button btnActualizarAnimal = ViewBindings.findChildViewById(rootView, id);
      if (btnActualizarAnimal == null) {
        break missingId;
      }

      id = R.id.chipAnimal;
      EditText chipAnimal = ViewBindings.findChildViewById(rootView, id);
      if (chipAnimal == null) {
        break missingId;
      }

      LinearLayout main = (LinearLayout) rootView;

      return new ActivityActualizarAnimalBinding((LinearLayout) rootView, actualizarAnimalTitulo,
          btnActualizarAnimal, chipAnimal, main);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
